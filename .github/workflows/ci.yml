name: 'ci'

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize, closed]

permissions:
  id-token: write
  packages: write
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: Check out code
      uses: actions/checkout@v4

    - name: Run tests
      run: |
        make test

  run:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: "checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: validate
        run: |
          .github/scripts/validate.sh


      - name: release-notes
        if: github.event.pull_request.merged == true
        run: |
          set -e; awk 'NR==2 {print RT,$0}' RS="## [v|0-9]" OFS="" CHANGELOG.md > release_description.md
          cat release_description.md
          echo $IMAGEVERSION

          git config --global user.email "autobump@gha.com"
          git config --global user.name "autobump"
          git tag $IMAGEVERSION


      - name: setup-qemu
        uses: docker/setup-qemu-action@v3

      - name: setup-buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: goreleaser dry run
        if: github.event.pull_request.merged == false
        uses: goreleaser/goreleaser-action@v6          # run goreleaser
        with:
          version: '~> v2'
          args: release --clean  --skip=publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}

      - name: goreleaser
        uses: goreleaser/goreleaser-action@v6          # run goreleaser
        if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
        with:
          version: '~> v2'
          args: release --clean --release-notes release_description.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
